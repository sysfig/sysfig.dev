<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Browser storage on sysfig</title><link>https://sysfig.dev/series/browser-storage/</link><description>Recent content in Browser storage on sysfig</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 11 Feb 2023 17:10:24 -0800</lastBuildDate><atom:link href="https://sysfig.dev/series/browser-storage/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://sysfig.dev/series/browser-storage/intro/</link><pubDate>Sat, 11 Feb 2023 17:20:43 -0800</pubDate><guid>https://sysfig.dev/series/browser-storage/intro/</guid><description>IndexedDB is an transactional, key-value, object-oriented database system capable of storing a large amount of data persistently inside a user&amp;rsquo;s browser.</description></item><item><title>Web Storage API</title><link>https://sysfig.dev/series/browser-storage/web-storage-api/</link><pubDate>Sat, 11 Feb 2023 17:20:43 -0800</pubDate><guid>https://sysfig.dev/series/browser-storage/web-storage-api/</guid><description>The Web Storage API is a web API, maintained by https://whatwg.org/, for storing string-only key-value pairs locally in the browser.
The Web Storage API provides two ways to store data - localStorage and sessionStorage. Both using the same API, but differs in how long the data persists for.
Data stored in sessionStorage persists only for that session, which is tied to a particular tab or window. If you open the same page on a new tab or window, that new tab/window is a new and completely different session, and have its own sessionStorage storage.</description></item><item><title>Core Concepts</title><link>https://sysfig.dev/series/browser-storage/concepts/</link><pubDate>Sat, 11 Feb 2023 17:03:33 -0800</pubDate><guid>https://sysfig.dev/series/browser-storage/concepts/</guid><description>Origins, Databases, Object Stores, Values, Keys, and Indexes Each origin (e.g. https://example.com) can have its own set of IndexedDB databases. Each database is identified with a name that is unique for that origin. Within each database is one of more object stores, which is where you store the actual data. Each object store must have a name that unique within the database.
You can think of an object store akin to a &amp;rsquo;table&amp;rsquo; in a relational database, or &amp;lsquo;collections&amp;rsquo; in MongoDB.</description></item><item><title/><link>https://sysfig.dev/series/browser-storage/z99_comparison/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sysfig.dev/series/browser-storage/z99_comparison/</guid><description>https://web.dev/storage-for-the-web/
Cookies pros:
Convenience - values are automatically sent to the server on every request Cookies cons:
Values are automatically sent to the server on every request Web API storage Pros:
Can store a relatively large amount of data (5MB per domain in Chrome, 3MB in Opera) Web API storage Cons:
Synchronous Can only store strings; other data types must be serialized and deserialized to another format. For example, you may be able to store objects as JSON using JSON.</description></item></channel></rss>