<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hugo on sysfig</title><link>https://sysfig.dev/tags/hugo/</link><description>Recent content in hugo on sysfig</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Mon, 14 Dec 2020 17:07:12 -0800</lastBuildDate><atom:link href="https://sysfig.dev/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo vs Other Static Site Generators</title><link>https://sysfig.dev/series/static-sites-with-hugo/hugo-vs-other-static-site-generators/</link><pubDate>Mon, 14 Dec 2020 17:07:12 -0800</pubDate><guid>https://sysfig.dev/series/static-sites-with-hugo/hugo-vs-other-static-site-generators/</guid><description>This book is about Hugo. But Hugo is not the only static site generator out there. So what makes Hugo so different? Before we go into that, let&amp;rsquo;s first talk about the features you can expect from any decent static site generators:
Templating - HTML templates that includes placeholders for styles and content. You may have a template for blog posts and another for static pages, but both rendered inside a main template that includes a header and footer.</description></item><item><title>Static vs Dynamic Sites</title><link>https://sysfig.dev/series/static-sites-with-hugo/static-vs-dynamic-sites/</link><pubDate>Mon, 14 Dec 2020 17:07:12 -0800</pubDate><guid>https://sysfig.dev/series/static-sites-with-hugo/static-vs-dynamic-sites/</guid><description>Some open-source blogging software like WordPress and Ghost store post data (content and metadata) as database entries, and retrieve them dynamically at the time clients request them. For example, if a visitor navigates to a post on a Ghost blog using the URL https://blog.example.com/explaining-dns, the Ghost backend would take the path (/explaining-dns) and try to match it to an entry in the database. Once found, it will either return the post data to the front-end to display, or generate the HTML page server-side and respond with the dynamically-generated HTML page.</description></item><item><title>Generate Static Sites with Hugo</title><link>https://sysfig.dev/series/static-sites-with-hugo/</link><pubDate>Mon, 14 Dec 2020 17:03:39 -0800</pubDate><guid>https://sysfig.dev/series/static-sites-with-hugo/</guid><description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi varius porta ligula a tristique. Praesent volutpat orci vel facilisis ullamcorper. Sed laoreet est non elit accumsan posuere. Sed eu condimentum tortor. Nunc bibendum ipsum ac nibh posuere, vitae efficitur lectus lacinia. Ut quis dui vel purus elementum tempor eu in arcu. Etiam leo quam, molestie non nisl sed, fringilla feugiat lectus. In commodo mi sit amet lectus semper, a porttitor est pharetra.</description></item><item><title>Introduction</title><link>https://sysfig.dev/series/static-sites-with-hugo/introduction/</link><pubDate>Mon, 14 Dec 2020 17:00:14 -0800</pubDate><guid>https://sysfig.dev/series/static-sites-with-hugo/introduction/</guid><description>Hugo is an open-source static site generator.</description></item></channel></rss>